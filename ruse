#!/usr/bin/env bash
# Ruse front-end script

Usage="Usage : `basename $0` [-ipdfvwcs] sourcefile"

cscheme=racket
IFS=""
spms="" # ex : a.c,b.c


############################
# Preprocess the buildsrc
#   needs the source
############################
preprocess()
{ 
    #clear buildsrc
    rm buildsrc/*.c buildsrc/*.h buildsrc/*.o buildsrc/*.o_S 2>/dev/null

    $cscheme parser/genc.scm < $1 > buildsrc/input.c

}

############################
# Build the Load Function
############################
load()
{
    
    # copy all cesk to buildsrc - rewriting strategy ?
    cp -p cesk/*.c buildsrc
    cp -p cesk/*.h buildsrc


    # replace a
    grep -B 9999999 "REPLACE" buildsrc/cesk.c > temp.clean
    if  cat temp.gen >> temp.clean 2>/dev/null ; then 
        mv temp.clean buildsrc/cesk.c
        # clean up
        rm temp.gen 
    fi
}

############################
# Fides generation - TODO
############################
fides()
{
    (IFS=,
        for spm in $spms; do
            echo "Generating code for $spm"
            fides/generate.pl buildsrc/$spm
            mv buildsrc/{$spm//\.c/\.spm} buildsrc/bin/{$spm//\.c/\.spm} 
        done)
}


############################
# Compile
############################
compile()
{

    preprocess $1
    load

    # Makefile time
    make -s --directory=buildsrc DEBOPT=$debopt CWARNFLAGS=$warnopt
}



#=====================================
# Front End
#=====================================

# we want at least one parameter (it may be a flag or an argument)
if [ $# -eq 0 ]; then
	echo $Usage >&2
	exit 1
fi

type racket >/dev/null 2>&1 || { echo -e >&2 
    "ERROR :: racket must be add to the PATH of the current shell\n Add PATH=\$PATH:/Applications/Racket\ <version>/bin/ to your shell rc"; exit 1; }

# flags
fflag=0
lflag=0
vflag=0
debopt=""
warnopt=-w


while getopts "lpdfwc" OPTION
do
	case $OPTION in

    # compile
    c)  compile ${!#}
        exit 0
        ;;

    # only parsing  
    p)  preprocess ${!#}
        cat buildsrc/input.c
        echo "============== Secure =================="
        load
        tail buildsrc/cesk.c
        exit 0
        ;;
         
    # use fides
	f)	fflag=1
		;;

    # debug version 
    d) debopt=-DDEBUG 
        ;;

    # use valgrind -- not compatible with fides !!
    v) vflag=1
        ;;

    # generate warnings
    w) wflag=1
        warnopt="-Wall -Wextra"
        ;;

	# logging
	l) debopt=-DDEBUG
		lflag=1
		;;

	?)	echo $Usage >&2
		exit 1
		;;
	esac
done

compile ${!#}

# run baby run
if [ $lflag -eq 1 ]; then
logname="test/log/$(basename ${!#})_log"
./bin/exec 2> $logname 
echo >> $logname
echo "================= INSECURE INPUT =================" >> $logname
echo >> $logname
cat buildsrc/input.c >> $logname
echo >> $logname
echo "================= SECURE INPUT =================" >> $logname
echo >> $logname
sed '1,/REPLACE/d' buildsrc/cesk.c >> $logname
else
./bin/exec
fi
