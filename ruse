#!/usr/bin/env bash
# Ruse front-end script

Usage="Usage : `basename $0` [-ipdfvwcs] sourcefile"

cscheme=racket
IFS=""
spms="" # ex : a.c,b.c

# we want at least one parameter (it may be a flag or an argument)
if [ $# -eq 0 ]; then
	echo $Usage >&2
	exit 1
fi

type racket >/dev/null 2>&1 || { echo -e >&2 
    "ERROR :: racket must be add to the PATH of the current shell\n Add PATH=\$PATH:/Applications/Racket\ <version>/bin/ to your shell rc"; exit 1; }

fflag=0
vflag=0
iflag=0
pflag=0
sflag=0 # Todo replace with ffi test
debopt=""
warnopt=-w

while getopts "ipdfvwcs" OPTION
do
	case $OPTION in
    # show input
    c)  rm buildsrc/input.*
        ;;
    p) pflag=1
        ;;
    i)  iflag=1
        ;;
    # use fides
	f)	fflag=1
		;;
    # debug version 
    d) dflag=1
        debopt=-DDEBUG 
        ;;
    # use valgrind -- not compatible with fides !!
    v) vflag=1
        ;;
    # generate warnings
    w) wflag=1
        warnopt="-Wall -Wextra"
        ;;
    s) sflag=1
        ;;
	?)	echo $Usage >&2
		exit 1
		;;
	esac
done


#clear buildsrc
rm buildsrc/*.c buildsrc/*.h buildsrc/*.o 2>/dev/null

# parser
#sed 's/;.*//' ${!#} > ${!#}__clear
$cscheme parser/genc.scm < ${!#} > buildsrc/input.c 
#rm ${!#}__clear

# show c inpud
if [ $iflag -eq 1 ]; then
    cat buildsrc/input.c
fi

if [ $pflag -eq 0 ]; then
# copy all cesk to buildsrc - rewriting strategy ?
cp cesk/*.c buildsrc
cp cesk/*.h buildsrc

if [ $sflag -eq 1 ]; then
   cp scesk/*.c buildsrc/
   cp -p scesk/*.h buildsrc/

   # replace a
    grep -B 9999999 "REPLACE" buildsrc/scesk.c > temp.clean
    if  cat temp.gen >> temp.clean 2>/dev/null ; then 
        mv temp.clean buildsrc/scesk.c
        # clean up
        rm temp.gen 
    fi
fi

# generate fides
if [ $fflag -eq 1 ]; then
    #type racket >/dev/null 2>&1 || { echo -e >&2  `ctags --c-kinds=+p 
    (IFS=,
        for spm in $spms; do
            echo "Generating code for $spm"
            fides/generate.pl buildsrc/$spm
            mv buildsrc/{$spm//\.c/\.spm} buildsrc/bin/{$spm//\.c/\.spm} 
        done)
fi

# Makefile time
make -s --directory=buildsrc DEBOPT=$debopt CWARNFLAGS=$warnopt

# run baby run
if [ $vflag -eq 1 -a $fflag -eq 0 ]; then
   valgrind --tool=memcheck --dsymutil=yes ./bin/exec 
else
./bin/exec
fi
fi
