#!/usr/bin/env bash
# Update Ruse test environment
# By Adriaan Larmuseau

############################
# Script variables
############################
langarray=( ml scheme )
extarray=(  ml scm )
i=0
options="f"
force=0
rusepos="."

############################
# Function :: Capitalize
# Captilaze a string
############################
function capitalize
{
    local ret=$(echo $1 | tr "[:lower:]" "[:upper:]")
    echo $ret
}


#=====================================
# Execute
#=====================================

# get options 
while getopts "$options" OPTION
do
    case $OPTION in

        f) force=1
            ;;

    esac
done

Timestamp="$(date +%s)"

# create RUSE for all
"$rusepos"/ruse -c
echo "Compiled Production VM"
"$rusepos"/ruse -dc
echo "Compiled Debug VM"

# generate byte code for every test
for dir in "${langarray[@]}"; do
    echo -e "\033[1;33m => Parsing ::  $(capitalize $dir)\033[0m"
    for f in "$rusepos"/test/$dir/*.${extarray[$i]}; do
        filename=$(basename "$f" 2> /dev/null) 
        extension="${filename##*.}"
        base="${filename%.*}"
        f2="$rusepos"/test/$dir/byte/${base}.insec.byte_${extension}  
        if [ $f -nt $f2 ] || [ $force -eq 1 ]; then
            echo ">> $f"
            "$rusepos"/ruse -p $f 
            mv *.byte* "$rusepos"/test/$dir/byte 2> /dev/null
        fi
    done
    i=$[i + 1]
done
echo "Done Generating Byte Code"

Timestamp="$(($(date +%s)-Timestamp))"
echo "Update completed in : ${Timestamp} seconds"

exit 0
